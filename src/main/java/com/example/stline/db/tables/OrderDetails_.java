/*
 * This file is generated by jOOQ.
*/
package com.example.stline.db.tables;


import com.example.stline.db.Keys;
import com.example.stline.db.Public;
import com.example.stline.db.tables.records.OrderDetails_Record;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderDetails_ extends TableImpl<OrderDetails_Record> {

    private static final long serialVersionUID = 1258680693;

    /**
     * The reference instance of <code>public.order_details_</code>
     */
    public static final OrderDetails_ ORDER_DETAILS_ = new OrderDetails_();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderDetails_Record> getRecordType() {
        return OrderDetails_Record.class;
    }

    /**
     * The column <code>public.order_details_.orderId</code>.
     */
    public final TableField<OrderDetails_Record, Long> ORDERID = createField("orderId", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.order_details_.productId</code>.
     */
    public final TableField<OrderDetails_Record, Long> PRODUCTID = createField("productId", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>public.order_details_</code> table reference
     */
    public OrderDetails_() {
        this(DSL.name("order_details_"), null);
    }

    /**
     * Create an aliased <code>public.order_details_</code> table reference
     */
    public OrderDetails_(String alias) {
        this(DSL.name(alias), ORDER_DETAILS_);
    }

    /**
     * Create an aliased <code>public.order_details_</code> table reference
     */
    public OrderDetails_(Name alias) {
        this(alias, ORDER_DETAILS_);
    }

    private OrderDetails_(Name alias, Table<OrderDetails_Record> aliased) {
        this(alias, aliased, null);
    }

    private OrderDetails_(Name alias, Table<OrderDetails_Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrderDetails_Record> getPrimaryKey() {
        return Keys.ORDER_DETAILS__PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrderDetails_Record>> getKeys() {
        return Arrays.<UniqueKey<OrderDetails_Record>>asList(Keys.ORDER_DETAILS__PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<OrderDetails_Record, ?>> getReferences() {
        return Arrays.<ForeignKey<OrderDetails_Record, ?>>asList(Keys.ORDER_DETAILS___FK_ORDERS_ORDERID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderDetails_ as(String alias) {
        return new OrderDetails_(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderDetails_ as(Name alias) {
        return new OrderDetails_(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderDetails_ rename(String name) {
        return new OrderDetails_(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderDetails_ rename(Name name) {
        return new OrderDetails_(name, null);
    }
}
