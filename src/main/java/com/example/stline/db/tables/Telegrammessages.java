/*
 * This file is generated by jOOQ.
*/
package com.example.stline.db.tables;


import com.example.stline.db.Indexes;
import com.example.stline.db.Keys;
import com.example.stline.db.Public;
import com.example.stline.db.tables.records.TelegrammessagesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Telegrammessages extends TableImpl<TelegrammessagesRecord> {

    private static final long serialVersionUID = 83307344;

    /**
     * The reference instance of <code>public.telegramMessages</code>
     */
    public static final Telegrammessages TELEGRAMMESSAGES = new Telegrammessages();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TelegrammessagesRecord> getRecordType() {
        return TelegrammessagesRecord.class;
    }

    /**
     * The column <code>public.telegramMessages.id</code>.
     */
    public final TableField<TelegrammessagesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('\"telegramMessages_id_seq\"'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.telegramMessages.id_post</code>.
     */
    public final TableField<TelegrammessagesRecord, Long> ID_POST = createField("id_post", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>public.telegramMessages</code> table reference
     */
    public Telegrammessages() {
        this(DSL.name("telegramMessages"), null);
    }

    /**
     * Create an aliased <code>public.telegramMessages</code> table reference
     */
    public Telegrammessages(String alias) {
        this(DSL.name(alias), TELEGRAMMESSAGES);
    }

    /**
     * Create an aliased <code>public.telegramMessages</code> table reference
     */
    public Telegrammessages(Name alias) {
        this(alias, TELEGRAMMESSAGES);
    }

    private Telegrammessages(Name alias, Table<TelegrammessagesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Telegrammessages(Name alias, Table<TelegrammessagesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TELEGRAMMESSAGES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TelegrammessagesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TELEGRAMMESSAGES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TelegrammessagesRecord> getPrimaryKey() {
        return Keys.TELEGRAMMESSAGES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TelegrammessagesRecord>> getKeys() {
        return Arrays.<UniqueKey<TelegrammessagesRecord>>asList(Keys.TELEGRAMMESSAGES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TelegrammessagesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TelegrammessagesRecord, ?>>asList(Keys.TELEGRAMMESSAGES__FK_TELEGRAMMESSAGES_POSTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Telegrammessages as(String alias) {
        return new Telegrammessages(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Telegrammessages as(Name alias) {
        return new Telegrammessages(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Telegrammessages rename(String name) {
        return new Telegrammessages(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Telegrammessages rename(Name name) {
        return new Telegrammessages(name, null);
    }
}
