/*
 * This file is generated by jOOQ.
*/
package com.example.stline.db.tables;


import com.example.stline.db.Keys;
import com.example.stline.db.Public;
import com.example.stline.db.tables.records.Product___Record;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Product___ extends TableImpl<Product___Record> {

    private static final long serialVersionUID = -1247269630;

    /**
     * The reference instance of <code>public.product___</code>
     */
    public static final Product___ PRODUCT___ = new Product___();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Product___Record> getRecordType() {
        return Product___Record.class;
    }

    /**
     * The column <code>public.product___.id</code>.
     */
    public final TableField<Product___Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('product____id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.product___.mark</code>.
     */
    public final TableField<Product___Record, String> MARK = createField("mark", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.product___.model</code>.
     */
    public final TableField<Product___Record, String> MODEL = createField("model", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.product___.range</code>.
     */
    public final TableField<Product___Record, String> RANGE = createField("range", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.product___.category</code>.
     */
    public final TableField<Product___Record, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.product___.years</code>.
     */
    public final TableField<Product___Record, String> YEARS = createField("years", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.product___.price</code>.
     */
    public final TableField<Product___Record, String> PRICE = createField("price", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.product___.info</code>.
     */
    public final TableField<Product___Record, String> INFO = createField("info", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.product___.photo1</code>.
     */
    public final TableField<Product___Record, String> PHOTO1 = createField("photo1", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.product___.photo2</code>.
     */
    public final TableField<Product___Record, String> PHOTO2 = createField("photo2", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.product___.photo3</code>.
     */
    public final TableField<Product___Record, String> PHOTO3 = createField("photo3", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>public.product___</code> table reference
     */
    public Product___() {
        this(DSL.name("product___"), null);
    }

    /**
     * Create an aliased <code>public.product___</code> table reference
     */
    public Product___(String alias) {
        this(DSL.name(alias), PRODUCT___);
    }

    /**
     * Create an aliased <code>public.product___</code> table reference
     */
    public Product___(Name alias) {
        this(alias, PRODUCT___);
    }

    private Product___(Name alias, Table<Product___Record> aliased) {
        this(alias, aliased, null);
    }

    private Product___(Name alias, Table<Product___Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Product___Record, Long> getIdentity() {
        return Keys.IDENTITY_PRODUCT___;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Product___Record> getPrimaryKey() {
        return Keys.PRODUCT____PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Product___Record>> getKeys() {
        return Arrays.<UniqueKey<Product___Record>>asList(Keys.PRODUCT____PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Product___Record, ?>> getReferences() {
        return Arrays.<ForeignKey<Product___Record, ?>>asList(Keys.PRODUCT_____FK_PRODUCTS_MARK, Keys.PRODUCT_____FK_PRODUCTS_CATEGORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Product___ as(String alias) {
        return new Product___(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Product___ as(Name alias) {
        return new Product___(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Product___ rename(String name) {
        return new Product___(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Product___ rename(Name name) {
        return new Product___(name, null);
    }
}
