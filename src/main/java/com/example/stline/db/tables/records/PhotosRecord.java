/*
 * This file is generated by jOOQ.
*/
package com.example.stline.db.tables.records;


import com.example.stline.db.tables.Photos;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PhotosRecord extends UpdatableRecordImpl<PhotosRecord> implements Record4<Long, String, String, Long> {

    private static final long serialVersionUID = -1714071961;

    /**
     * Setter for <code>public.photos.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.photos.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.photos.brand</code>.
     */
    public void setBrand(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.photos.brand</code>.
     */
    public String getBrand() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.photos.model</code>.
     */
    public void setModel(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.photos.model</code>.
     */
    public String getModel() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.photos.product</code>.
     */
    public void setProduct(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.photos.product</code>.
     */
    public Long getProduct() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Photos.PHOTOS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Photos.PHOTOS.BRAND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Photos.PHOTOS.MODEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Photos.PHOTOS.PRODUCT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getBrand();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getModel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getProduct();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getBrand();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getModel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getProduct();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PhotosRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PhotosRecord value2(String value) {
        setBrand(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PhotosRecord value3(String value) {
        setModel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PhotosRecord value4(Long value) {
        setProduct(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PhotosRecord values(Long value1, String value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PhotosRecord
     */
    public PhotosRecord() {
        super(Photos.PHOTOS);
    }

    /**
     * Create a detached, initialised PhotosRecord
     */
    public PhotosRecord(Long id, String brand, String model, Long product) {
        super(Photos.PHOTOS);

        set(0, id);
        set(1, brand);
        set(2, model);
        set(3, product);
    }
}
